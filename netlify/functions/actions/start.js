export const startAction = async ctx => {

    if (ctx.from.is_bot) {
        return ctx.reply(`Sorry I only interact with humans!`)
    }

    try {
        const response = await fetch('https://graphql.fauna.com/graphql', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': `Bearer ${process.env.FAUNA_SECRET_KEY}`
            },
            body: JSON.stringify({
                query: `
                mutation CreateUser {
                    createUser(data: {
                       id: "${ctx.from.id}" 
                       is_bot: ${ctx.from.is_bot}
                       first_name: "${ctx.from.first_name}"
                       last_name: "${ctx.from.last_name}"
                       username: "${ctx.from.username}"
                       language_code: "${ctx.from.language_code}"
                   }){
                        id
                    }
                 }
            `,
            }),
        })
        const result = await response.json();
        // console.log(result, 'RESULT');
        if (result.errors) {
            return ctx.reply(`${ctx.from.username}, –≤—ã —É–∂–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É`)
        } else {
            return ctx.reply(`–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É!) –ü–µ—Ä–≤—ã–µ –ø–æ–¥–ø–∏—Å–∫–∏ –≤—Å–µ–≥–¥–∞ —Å–∞–º—ã–µ –Ω—É–∂–Ω—ã–µ –∏ —Ü–µ–Ω–Ω—ã–µ üòâ –≤ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å –∑–∞ –¥–æ–≤–µ—Ä–∏–µ —è —Ö–æ—á—É –ø–æ–¥–∞—Ä–∏—Ç—å —Å–∫–∏–¥–∫—É –Ω–∞ —Å–≤–æ–π –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ç–∞—Ä–∏—Ñ: 2500 –≤–º–µ—Å—Ç–æ 3500üòç –≤ –Ω–µ–≥–æ –≤—Ö–æ–¥—è—Ç 60-70 —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∏ —Ä–µ—Ç—É—à–∏ (–µ—Å–ª–∏ –æ–Ω–∞ –Ω—É–∂–Ω–∞) + –≤—Å–µ –∏—Å—Ö–æ–¥–Ω–∏–∫–∏. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–∫–∏–¥–∫—É –º–æ–∂–Ω–æ –≤ —Ç–µ—á–µ–Ω–∏–µ 2 –Ω–µ–¥–µ–ª—å —Å –º–æ–º–µ–Ω—Ç–∞ –ø–æ–ª—É—á–µ–Ω–∏—è. –ß—Ç–æ–±—ã –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å—Å—è —Å –¥–∞—Ç–æ–π –∏ —Ç–µ–º–∞—Ç–∏–∫–æ–π —Å—ä—ë–º–∫–∏ –ø–∏—à–∏—Ç–µ –º–Ω–µ –≤ —Å–æ–æ–±—â–µ–Ω–∏—è t.me/svobodinaphoto`)
        }

    } catch (e) {
        console.log(e);
        return ctx.reply(`–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫`)
    }

}